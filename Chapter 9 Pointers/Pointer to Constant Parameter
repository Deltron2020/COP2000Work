// This program demonstrates a pointer to const parameter
#include <iostream>
using namespace std;

// Function Prototype
void displayValues(const int *, int);

int main()
{
    // Array Size
    const int SIZE = 6;

    // Define an array of const ints
    const int array1[SIZE] = {1, 2, 3, 4, 5, 6};
    
    // Define an array of non const ints
    int array2[SIZE] = {7, 8, 9, 10, 11, 12};

    // Display the values of the const array
    displayValues(array1, SIZE);

    // Display the values of the non const array
    displayValues(array2, SIZE);
    return 0; 
}

// Define the displayValues Function
void displayValues(const int *numbers, int size)
{
    // Display all the values
    for (int count = 0; count < size; count++)
    {
        cout << *(numbers + count) << " ";
    }
    cout << endl;
}

///
Constant Pointers
A pointer to const points at a constant item
While a const pointer, the pointer itself is constant
Once the pointer is initialized with an address, it cannot point to anything else
The Following Code shows an example of a const pointer

int value = 22;
int * const ptr = &value;
///